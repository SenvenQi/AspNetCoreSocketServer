@using System.Reactive.Threading.Tasks
@using AspNetCoreSocketServer.BlazorServer.ViewModel
@inherits ReactiveUI.Blazor.ReactiveComponentBase<AspNetCoreSocketServer.BlazorServer.ViewModel.SessionView>

<div class="d-flex flex-wrap flex-grow-1 gap-4">
    @foreach (var item in ViewModel.SessionDatas)
    {
        <MudItem>
            <MudPaper Class="pa-2 rounded-lg max-width" Outlined="true" Elevation="0">
                <MudPaper Class="rounded-lg docs-gray-bg bg-opacity-75 d-flex flex-column align-center justify-center pa-4"
                          Square="true">
                    <MudText Class="break-text">@item.Address</MudText>
                </MudPaper>
                <MudText Typo="Typo.h6" Class="mud-typography mud-typography-subtitle2 mt-3">ip地址: @item.Ip.ToString()</MudText>
            </MudPaper>
        </MudItem> 
    }
</div>
<style>
    .max-width {
        max-width: 250px;
    }
    .break-text {
        word-break: break-all;
    }
    .docs-gray-bg{
        background-color: var(--mud-palette-background-grey)
    }
</style>
@code {

    [Inject]
    public SessionView SessionView
    {
        get => ViewModel;
        set => ViewModel = value;
    }

    protected override async Task OnInitializedAsync()
    {
        await ViewModel.LoadSessions.Execute().ToTask();
    }

}